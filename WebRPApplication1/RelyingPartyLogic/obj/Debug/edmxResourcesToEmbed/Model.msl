<?xml version="1.0" encoding="utf-8"?>
<Mapping Space="C-S" xmlns="urn:schemas-microsoft-com:windows:storage:mapping:CS">
  <EntityContainerMapping StorageEntityContainer="DatabaseModelStoreContainer" CdmEntityContainer="DatabaseEntities">
    <EntitySetMapping Name="Roles">
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.Role)">
        <MappingFragment StoreEntitySet="Role">
          <ScalarProperty Name="RoleId" ColumnName="RoleId" />
          <ScalarProperty Name="Name" ColumnName="Name" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Users">
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.User)">
        <MappingFragment StoreEntitySet="User">
          <ScalarProperty Name="UserId" ColumnName="UserId" />
          <ScalarProperty Name="CreatedOnUtc" ColumnName="CreatedOn" />
          <ScalarProperty Name="EmailAddressVerified" ColumnName="EmailAddressVerified" />
          <ScalarProperty Name="FirstName" ColumnName="FirstName" />
          <ScalarProperty Name="LastName" ColumnName="LastName" />
          <ScalarProperty Name="EmailAddress" ColumnName="EmailAddress" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="UserRole" TypeName="DatabaseModel.UserRole" StoreEntitySet="UserRole">
      <EndProperty Name="User">
        <ScalarProperty Name="UserId" ColumnName="UserId" />
      </EndProperty>
      <EndProperty Name="Role">
        <ScalarProperty Name="RoleId" ColumnName="RoleId" />
      </EndProperty>
    </AssociationSetMapping>
    <EntitySetMapping Name="AuthenticationTokens">
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.AuthenticationToken)">
        <MappingFragment StoreEntitySet="AuthenticationToken">
          <ScalarProperty Name="AuthenticationTokenId" ColumnName="AuthenticationTokenId" />
          <ScalarProperty Name="UsageCount" ColumnName="UsageCount" />
          <ScalarProperty Name="LastUsedUtc" ColumnName="LastUsed" />
          <ScalarProperty Name="CreatedOnUtc" ColumnName="CreatedOn" />
          <ScalarProperty Name="FriendlyIdentifier" ColumnName="OpenIdFriendlyIdentifier" />
          <ScalarProperty Name="ClaimedIdentifier" ColumnName="OpenIdClaimedIdentifier" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Consumers">
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.Consumer)">
        <MappingFragment StoreEntitySet="Consumer">
          <ScalarProperty Name="Name" ColumnName="Name" />
          <ScalarProperty Name="ConsumerId" ColumnName="ConsumerId" />
          <ScalarProperty Name="VerificationCodeLength" ColumnName="VerificationCodeLength" />
          <ScalarProperty Name="VerificationCodeFormatAsInt" ColumnName="VerificationCodeFormat" />
          <ScalarProperty Name="CallbackAsString" ColumnName="Callback" />
          <ScalarProperty Name="X509CertificateAsBinary" ColumnName="X509Certificate" />
          <ScalarProperty Name="ConsumerSecret" ColumnName="ConsumerSecret" />
          <ScalarProperty Name="ConsumerKey" ColumnName="ConsumerKey" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="IssuedTokens">
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.IssuedToken)">
        <MappingFragment StoreEntitySet="IssuedToken">
          <ScalarProperty Name="IssuedTokenId" ColumnName="IssuedTokenId" />
          <ScalarProperty Name="Scope" ColumnName="Scope" />
          <ScalarProperty Name="CreatedOnUtc" ColumnName="CreatedOn" />
          <ScalarProperty Name="TokenSecret" ColumnName="TokenSecret" />
          <ScalarProperty Name="Token" ColumnName="Token" />
        </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.IssuedRequestToken)">
        <MappingFragment StoreEntitySet="IssuedToken">
          <ScalarProperty Name="IssuedTokenId" ColumnName="IssuedTokenId" />
          <ScalarProperty Name="CallbackAsString" ColumnName="Callback" />
          <ScalarProperty Name="ConsumerVersionAsString" ColumnName="ConsumerVersion" />
          <ScalarProperty Name="VerificationCode" ColumnName="VerificationCode" />
          <Condition ColumnName="IsAccessToken" Value="0" />
        </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.IssuedAccessToken)">
        <MappingFragment StoreEntitySet="IssuedToken">
          <ScalarProperty Name="IssuedTokenId" ColumnName="IssuedTokenId" />
          <ScalarProperty Name="ExpirationDateUtc" ColumnName="ExpirationDate" />
          <Condition ColumnName="IsAccessToken" Value="1" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_AuthenticationToken_User" TypeName="DatabaseModel.FK_AuthenticationToken_User" StoreEntitySet="AuthenticationToken">
      <EndProperty Name="AuthenticationToken">
        <ScalarProperty Name="AuthenticationTokenId" ColumnName="AuthenticationTokenId" />
      </EndProperty>
      <EndProperty Name="User">
        <ScalarProperty Name="UserId" ColumnName="UserId" />
      </EndProperty>
    </AssociationSetMapping>
    <AssociationSetMapping Name="FK_IssuedToken_Consumer1" TypeName="DatabaseModel.FK_IssuedToken_Consumer1" StoreEntitySet="IssuedToken">
      <EndProperty Name="IssuedToken">
        <ScalarProperty Name="IssuedTokenId" ColumnName="IssuedTokenId" />
      </EndProperty>
      <EndProperty Name="Consumer">
        <ScalarProperty Name="ConsumerId" ColumnName="ConsumerId" />
      </EndProperty>
    </AssociationSetMapping>
    <AssociationSetMapping Name="FK_IssuedToken_User1" TypeName="DatabaseModel.FK_IssuedToken_User1" StoreEntitySet="IssuedToken">
      <EndProperty Name="IssuedToken">
        <ScalarProperty Name="IssuedTokenId" ColumnName="IssuedTokenId" />
      </EndProperty>
      <EndProperty Name="User">
        <ScalarProperty Name="UserId" ColumnName="UserId" />
      </EndProperty>
      <Condition ColumnName="UserId" IsNull="false" />
    </AssociationSetMapping>
    <EntitySetMapping Name="Nonces">
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.Nonce)">
        <MappingFragment StoreEntitySet="Nonce">
          <ScalarProperty Name="ExpiresUtc" ColumnName="Expires" />
          <ScalarProperty Name="IssuedUtc" ColumnName="Issued" />
          <ScalarProperty Name="Code" ColumnName="Code" />
          <ScalarProperty Name="Context" ColumnName="Context" />
          <ScalarProperty Name="NonceId" ColumnName="NonceId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="OpenIdAssociations">
      <EntityTypeMapping TypeName="IsTypeOf(DatabaseModel.OpenIdAssociation)">
        <MappingFragment StoreEntitySet="OpenIDAssociation">
          <ScalarProperty Name="PrivateDataLength" ColumnName="PrivateDataLength" />
          <ScalarProperty Name="PrivateData" ColumnName="PrivateData" />
          <ScalarProperty Name="ExpirationUtc" ColumnName="Expiration" />
          <ScalarProperty Name="AssociationHandle" ColumnName="AssociationHandle" />
          <ScalarProperty Name="DistinguishingFactor" ColumnName="DistinguishingFactor" />
          <ScalarProperty Name="AssociationId" ColumnName="AssociationId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <FunctionImportMapping FunctionImportName="ClearExpiredNonces" FunctionName="DatabaseModel.Store.ClearExpiredNonces" />
  </EntityContainerMapping>
</Mapping>